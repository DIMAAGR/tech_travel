// Mocks generated by Mockito 5.4.4 from annotations
// in tech_travel/test/presentation/onboarding/onboarding_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tech_travel/src/core/services/image_picker_service.dart' as _i4;
import 'package:tech_travel/src/core/services/permission_services.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [PermissionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionService extends _i1.Mock implements _i2.PermissionService {
  MockPermissionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> requestGalleryPermission() => (super.noSuchMethod(
        Invocation.method(
          #requestGalleryPermission,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [ImagePickerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePickerService extends _i1.Mock
    implements _i4.ImagePickerService {
  MockImagePickerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i5.File?> pickFromCamera() => (super.noSuchMethod(
        Invocation.method(
          #pickFromCamera,
          [],
        ),
        returnValue: _i3.Future<_i5.File?>.value(),
      ) as _i3.Future<_i5.File?>);

  @override
  _i3.Future<_i5.File?> pickFromGallery() => (super.noSuchMethod(
        Invocation.method(
          #pickFromGallery,
          [],
        ),
        returnValue: _i3.Future<_i5.File?>.value(),
      ) as _i3.Future<_i5.File?>);
}
