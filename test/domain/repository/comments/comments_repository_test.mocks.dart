// Mocks generated by Mockito 5.4.4 from annotations
// in tech_travel/test/domain/repository/comments/comments_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tech_travel/src/core/services/comments_serivce.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CommentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommentService extends _i1.Mock implements _i2.CommentService {
  MockCommentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>?> getLastComment(String? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLastComment,
          [movieId],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getAllComments(String? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllComments,
          [movieId],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<bool> addComment({
    required String? comment,
    required String? movieId,
    required Map<String, dynamic>? user,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addComment,
          [],
          {
            #comment: comment,
            #movieId: movieId,
            #user: user,
          },
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
