// Mocks generated by Mockito 5.4.4 from annotations
// in tech_travel/test/domain/repository/signup/signup_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:mockito/mockito.dart' as _i1;
import 'package:retrofit/retrofit.dart' as _i2;
import 'package:tech_travel/src/data/api/api_client.dart' as _i7;
import 'package:tech_travel/src/data/models/likes_model.dart' as _i5;
import 'package:tech_travel/src/data/models/movie_model.dart' as _i4;
import 'package:tech_travel/src/data/models/subtitle_model.dart' as _i6;
import 'package:tech_travel/src/data/models/user_model.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHttpResponse_0<T> extends _i1.SmartFake
    implements _i2.HttpResponse<T> {
  _FakeHttpResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieModel_2 extends _i1.SmartFake implements _i4.MovieModel {
  _FakeMovieModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLikesModel_3 extends _i1.SmartFake implements _i5.LikesModel {
  _FakeLikesModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSubtitlesModel_4 extends _i1.SmartFake
    implements _i6.SubtitlesModel {
  _FakeSubtitlesModel_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i7.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.HttpResponse<dynamic>> registerUser(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [body],
        ),
        returnValue: _i8.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #registerUser,
            [body],
          ),
        )),
      ) as _i8.Future<_i2.HttpResponse<dynamic>>);

  @override
  _i8.Future<_i2.HttpResponse<dynamic>> updateMe(Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMe,
          [body],
        ),
        returnValue: _i8.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #updateMe,
            [body],
          ),
        )),
      ) as _i8.Future<_i2.HttpResponse<dynamic>>);

  @override
  _i8.Future<_i3.UserModel> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i8.Future<_i3.UserModel>.value(_FakeUserModel_1(
          this,
          Invocation.method(
            #getCurrentUser,
            [],
          ),
        )),
      ) as _i8.Future<_i3.UserModel>);

  @override
  _i8.Future<_i2.HttpResponse<dynamic>> deleteUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [userId],
        ),
        returnValue: _i8.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #deleteUser,
            [userId],
          ),
        )),
      ) as _i8.Future<_i2.HttpResponse<dynamic>>);

  @override
  _i8.Future<_i4.MovieModel> getMovies() => (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [],
        ),
        returnValue: _i8.Future<_i4.MovieModel>.value(_FakeMovieModel_2(
          this,
          Invocation.method(
            #getMovies,
            [],
          ),
        )),
      ) as _i8.Future<_i4.MovieModel>);

  @override
  _i8.Future<_i5.LikesModel> getLikes() => (super.noSuchMethod(
        Invocation.method(
          #getLikes,
          [],
        ),
        returnValue: _i8.Future<_i5.LikesModel>.value(_FakeLikesModel_3(
          this,
          Invocation.method(
            #getLikes,
            [],
          ),
        )),
      ) as _i8.Future<_i5.LikesModel>);

  @override
  _i8.Future<_i2.HttpResponse<dynamic>> postLike(Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #postLike,
          [body],
        ),
        returnValue: _i8.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #postLike,
            [body],
          ),
        )),
      ) as _i8.Future<_i2.HttpResponse<dynamic>>);

  @override
  _i8.Future<_i2.HttpResponse<dynamic>> deleteLike(String? likeId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteLike,
          [likeId],
        ),
        returnValue: _i8.Future<_i2.HttpResponse<dynamic>>.value(
            _FakeHttpResponse_0<dynamic>(
          this,
          Invocation.method(
            #deleteLike,
            [likeId],
          ),
        )),
      ) as _i8.Future<_i2.HttpResponse<dynamic>>);

  @override
  _i8.Future<_i6.SubtitlesModel> getSubtitles(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSubtitles,
          [movieId],
        ),
        returnValue: _i8.Future<_i6.SubtitlesModel>.value(_FakeSubtitlesModel_4(
          this,
          Invocation.method(
            #getSubtitles,
            [movieId],
          ),
        )),
      ) as _i8.Future<_i6.SubtitlesModel>);
}
